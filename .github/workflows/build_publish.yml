name: Build & Publish

on:
  workflow_dispatch:
    inputs:
      pre_release:
        type: boolean
        description: Nightly Build
        required: false

jobs:
  compile:
    runs-on: windows-latest
    outputs:
      id: ${{ steps.release.outputs.id }}
    
    steps:
    - name: Switch Branch
      uses: actions/checkout@v3
      with:
        ref: 'main'
        
    - name: Get Current Date
      id: get_date
      run: |
        echo "##[set-output name=date;]$(Get-Date -Format 'yyyy.MM.dd')"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_date.outputs.date }}
        release_name: ${{ steps.get_date.outputs.date }}
        body_path: ""
        draft: true
        prerelease: ${{ github.event.inputs.pre_release }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20
    - name: Download dependencies
      run: go mod download
    - name: Install UPX
      uses: crazy-max/ghaction-chocolatey@v2
      with:
        args: install upx
      
    - name: Build - Windows x64 Binary
      env:
        GOOS: windows
        GOARCH: amd64
      run: |
        go build -ldflags "-w" -v -o ./pathman.exe
        upx pathman.exe
      
  
    - name: Upload Windows amd64
      id: upload-win_amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pathman.exe
        asset_name: pathman.exe
        asset_content_type: application/tar+gzip
        
    - name: Publish Release
      id: release
      uses: irongut/EditRelease@v1.2.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        id: ${{ steps.create_release.outputs.id }}
        draft: false